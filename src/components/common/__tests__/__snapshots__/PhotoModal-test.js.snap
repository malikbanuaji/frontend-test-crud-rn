// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with photo 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderRadius": 8,
          "padding": 16,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Rubik-Light",
            "fontSize": 20,
            "padding": 12,
          }
        }
      >
        Ganti Foto
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "#d3d3d3",
            "height": 1.5,
          }
        }
      />
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "padding": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Rubik-Regular",
              "fontSize": 14,
            }
          }
        >
          Hapus foto
        </Text>
      </View>
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "padding": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Rubik-Regular",
              "fontSize": 14,
            }
          }
        >
          Ambil foto baru
        </Text>
      </View>
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "padding": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Rubik-Regular",
              "fontSize": 14,
            }
          }
        >
          Pilih foto baru
        </Text>
      </View>
      <View
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 4,
              "overflow": "hidden",
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontFamily": "Rubik-Medium",
                  "fontSize": 14,
                }
              }
            >
              Batal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`renders correctly without photo 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderRadius": 8,
          "padding": 16,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Rubik-Light",
            "fontSize": 20,
            "padding": 12,
          }
        }
      >
        Ganti Foto
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "#d3d3d3",
            "height": 1.5,
          }
        }
      />
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "padding": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Rubik-Regular",
              "fontSize": 14,
            }
          }
        >
          Ambil foto baru
        </Text>
      </View>
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "padding": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Rubik-Regular",
              "fontSize": 14,
            }
          }
        >
          Pilih foto baru
        </Text>
      </View>
      <View
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 4,
              "overflow": "hidden",
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontFamily": "Rubik-Medium",
                  "fontSize": 14,
                }
              }
            >
              Batal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
